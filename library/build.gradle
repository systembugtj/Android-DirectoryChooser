apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'checkstyle'
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    }
}

repositories {
    mavenCentral()
    maven {url "https://clojars.org/repo/"}
}

dependencies {
    compile 'com.android.support:palette-v7:23.2.0'
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:support-v4:23.2.0'
    compile 'com.android.support:design:23.2.0'

    compile 'com.android.support:support-annotations:23.3.0'
    compile 'com.gu:option:1.3'
    compile 'com.google.auto.value:auto-value:1.2'
    apt 'frankiesardo:auto-parcel:1.0.1'


    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'com.squareup.assertj:assertj-android:1.1.0'
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3' // fixes issue on linux/mac
    testCompile('org.robolectric:robolectric:3.0')
    testCompile('org.robolectric:shadows-support-v4:3.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}


android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

checkstyle {
    configFile project.file('../config/checkstyle/checkstyle.xml')
    showViolations true
}

//apply from: 'https://raw.githubusercontent.com/robbypond/gradle-mvn-push/8f35c0555e9c71154c08dfde9397340099f8dc9f/gradle-mvn-push.gradle'


gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign } &&
            ':library:uploadArchives' in gradle.startParameter.taskNames) {
        // Use Java 6's console to read from the console (no good for a CI environment)
        Console console = System.console()
        console.printf "\n\nWe have to sign some things in this build.\n\nPlease enter your signing details.\n\n"
        allprojects { ext."signing.password" = console.readPassword("PGP Private Key Password: ") }
    }
}
